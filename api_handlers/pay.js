import { migrate, client } from '../shared/db.js'; import { requireAuth } from '../shared/auth.js'; import fetch from 'node-fetch'; import { v4 as uuidv4 } from 'uuid';
export default async function handler(req,res){ try{ if(req.method!=='POST') return res.status(405).end(); await migrate(); const userId=requireAuth(req); const id=req.query.id; const db=await client(); const booking=(await db.query(`SELECT b.*, r.name AS room_name FROM bookings b JOIN rooms r ON r.id=b.room_id WHERE b.id=? AND b.user_id=?`,[id,userId])).rows[0]; if(!booking) return res.status(404).json({ error:'Бронь не найдена' }); if(booking.payment_status==='succeeded') return res.status(200).json({ alreadyPaid:true }); const amount=(booking.total_price_cents||0)/100; if(!amount) return res.status(400).json({ error:'Нулевая сумма' }); const idempotenceKey=uuidv4(); const auth=Buffer.from(`${process.env.YK_SHOP_ID}:${process.env.YK_SECRET_KEY}`).toString('base64'); const payload={ amount:{ value: amount.toFixed(2), currency: process.env.CURRENCY || 'RUB' }, capture:true, description:`FADEOUT • Бронь #${booking.id} • ${booking.room_name}`, confirmation:{ type:'embedded' }, metadata:{ booking_id:String(booking.id), user_id:String(booking.user_id) } }; const resp=await fetch('https://api.yookassa.ru/v3/payments',{ method:'POST', headers:{ 'Content-Type':'application/json', 'Idempotence-Key': idempotenceKey, 'Authorization': `Basic ${auth}` }, body: JSON.stringify(payload) }); const data=await resp.json(); if(!resp.ok) return res.status(resp.status).json({ error: data.description || 'Ошибка Юкассы' }); await db.execute('UPDATE bookings SET payment_id=?, payment_status=? WHERE id=?',[data.id,'pending',booking.id]); res.status(200).json({ paymentId:data.id, confirmationToken:data.confirmation?.confirmation_token }); } catch(e){ res.status(500).json({ error:e.message }); } }